// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/FlytekVoiceSDKPrivatePCH.h"
#include "GeneratedCppIncludes.h"
#include "FlytekVoiceSDK.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1FlytekVoiceSDK() {}
static class UEnum* ESpeechLanguage_StaticEnum()
{
	extern FLYTEKVOICESDK_API class UPackage* Z_Construct_UPackage__Script_FlytekVoiceSDK();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern FLYTEKVOICESDK_API class UEnum* Z_Construct_UEnum_FlytekVoiceSDK_ESpeechLanguage();
		Singleton = GetStaticEnum(Z_Construct_UEnum_FlytekVoiceSDK_ESpeechLanguage, Z_Construct_UPackage__Script_FlytekVoiceSDK(), TEXT("ESpeechLanguage"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESpeechLanguage(ESpeechLanguage_StaticEnum, TEXT("/Script/FlytekVoiceSDK"), TEXT("ESpeechLanguage"), false, nullptr, nullptr);
	void USpeechRecognizer::StaticRegisterNativesUSpeechRecognizer()
	{
	}
	IMPLEMENT_CLASS(USpeechRecognizer, 2336485845);
	void USpeekRecognizerFunctionLibrary::StaticRegisterNativesUSpeekRecognizerFunctionLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(USpeekRecognizerFunctionLibrary::StaticClass(), "InitializeSpeechRecognizer",(Native)&USpeekRecognizerFunctionLibrary::execInitializeSpeechRecognizer);
		FNativeFunctionRegistrar::RegisterFunction(USpeekRecognizerFunctionLibrary::StaticClass(), "StartLisening",(Native)&USpeekRecognizerFunctionLibrary::execStartLisening);
		FNativeFunctionRegistrar::RegisterFunction(USpeekRecognizerFunctionLibrary::StaticClass(), "StopLisening",(Native)&USpeekRecognizerFunctionLibrary::execStopLisening);
	}
	IMPLEMENT_CLASS(USpeekRecognizerFunctionLibrary, 3003261021);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	FLYTEKVOICESDK_API class UEnum* Z_Construct_UEnum_FlytekVoiceSDK_ESpeechLanguage();
	FLYTEKVOICESDK_API class UFunction* Z_Construct_UDelegateFunction_FlytekVoiceSDK_OnInitializeResult__DelegateSignature();
	FLYTEKVOICESDK_API class UFunction* Z_Construct_UDelegateFunction_FlytekVoiceSDK_OnSpeechRecognizeResult__DelegateSignature();
	FLYTEKVOICESDK_API class UClass* Z_Construct_UClass_USpeechRecognizer_NoRegister();
	FLYTEKVOICESDK_API class UClass* Z_Construct_UClass_USpeechRecognizer();
	FLYTEKVOICESDK_API class UFunction* Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_InitializeSpeechRecognizer();
	FLYTEKVOICESDK_API class UFunction* Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_StartLisening();
	FLYTEKVOICESDK_API class UFunction* Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_StopLisening();
	FLYTEKVOICESDK_API class UClass* Z_Construct_UClass_USpeekRecognizerFunctionLibrary_NoRegister();
	FLYTEKVOICESDK_API class UClass* Z_Construct_UClass_USpeekRecognizerFunctionLibrary();
	FLYTEKVOICESDK_API class UPackage* Z_Construct_UPackage__Script_FlytekVoiceSDK();
	UEnum* Z_Construct_UEnum_FlytekVoiceSDK_ESpeechLanguage()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_FlytekVoiceSDK();
		extern uint32 Get_Z_Construct_UEnum_FlytekVoiceSDK_ESpeechLanguage_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESpeechLanguage"), 0, Get_Z_Construct_UEnum_FlytekVoiceSDK_ESpeechLanguage_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESpeechLanguage"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESpeechLanguage::EL_Chinese")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESpeechLanguage::EL_English")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESpeechLanguage::EL_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ESpeechLanguage");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FlytekVoiceSDK.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_FlytekVoiceSDK_ESpeechLanguage_CRC() { return 723762454U; }
	UFunction* Z_Construct_UDelegateFunction_FlytekVoiceSDK_OnInitializeResult__DelegateSignature()
	{
		struct _Script_FlytekVoiceSDK_eventOnInitializeResult_Parms
		{
			int32 ErrorCode;
		};
		UObject* Outer=Z_Construct_UPackage__Script_FlytekVoiceSDK();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnInitializeResult__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_FlytekVoiceSDK_eventOnInitializeResult_Parms));
			UProperty* NewProp_ErrorCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorCode"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ErrorCode, _Script_FlytekVoiceSDK_eventOnInitializeResult_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SpeechRecognizer.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_FlytekVoiceSDK_OnSpeechRecognizeResult__DelegateSignature()
	{
		struct _Script_FlytekVoiceSDK_eventOnSpeechRecognizeResult_Parms
		{
			FString ResultText;
		};
		UObject* Outer=Z_Construct_UPackage__Script_FlytekVoiceSDK();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSpeechRecognizeResult__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_FlytekVoiceSDK_eventOnSpeechRecognizeResult_Parms));
			UProperty* NewProp_ResultText = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ResultText"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ResultText, _Script_FlytekVoiceSDK_eventOnSpeechRecognizeResult_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SpeechRecognizer.h"));
			MetaData->SetValue(NewProp_ResultText, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USpeechRecognizer_NoRegister()
	{
		return USpeechRecognizer::StaticClass();
	}
	UClass* Z_Construct_UClass_USpeechRecognizer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_FlytekVoiceSDK();
			OuterClass = USpeechRecognizer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_InitResult = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InitResult"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(InitResult, USpeechRecognizer), 0x0010000010080000, Z_Construct_UDelegateFunction_FlytekVoiceSDK_OnInitializeResult__DelegateSignature());
				UProperty* NewProp_SpeeckResult = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpeeckResult"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(SpeeckResult, USpeechRecognizer), 0x0010000010080000, Z_Construct_UDelegateFunction_FlytekVoiceSDK_OnSpeechRecognizeResult__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SpeechRecognizer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/SpeechRecognizer.h"));
				MetaData->SetValue(NewProp_InitResult, TEXT("Category"), TEXT("SpeechRec"));
				MetaData->SetValue(NewProp_InitResult, TEXT("ModuleRelativePath"), TEXT("Public/SpeechRecognizer.h"));
				MetaData->SetValue(NewProp_SpeeckResult, TEXT("Category"), TEXT("SpeechRec"));
				MetaData->SetValue(NewProp_SpeeckResult, TEXT("ModuleRelativePath"), TEXT("Public/SpeechRecognizer.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USpeechRecognizer(Z_Construct_UClass_USpeechRecognizer, &USpeechRecognizer::StaticClass, TEXT("USpeechRecognizer"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USpeechRecognizer);
	UFunction* Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_InitializeSpeechRecognizer()
	{
		struct SpeekRecognizerFunctionLibrary_eventInitializeSpeechRecognizer_Parms
		{
			ESpeechLanguage InLanguage;
			bool IsContinuous;
			USpeechRecognizer* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USpeekRecognizerFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("InitializeSpeechRecognizer"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SpeekRecognizerFunctionLibrary_eventInitializeSpeechRecognizer_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, SpeekRecognizerFunctionLibrary_eventInitializeSpeechRecognizer_Parms), 0x0010000000000580, Z_Construct_UClass_USpeechRecognizer_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsContinuous, SpeekRecognizerFunctionLibrary_eventInitializeSpeechRecognizer_Parms, bool);
			UProperty* NewProp_IsContinuous = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsContinuous"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsContinuous, SpeekRecognizerFunctionLibrary_eventInitializeSpeechRecognizer_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(IsContinuous, SpeekRecognizerFunctionLibrary_eventInitializeSpeechRecognizer_Parms), sizeof(bool), true);
			UProperty* NewProp_InLanguage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InLanguage"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(InLanguage, SpeekRecognizerFunctionLibrary_eventInitializeSpeechRecognizer_Parms), 0x0010000000000080, Z_Construct_UEnum_FlytekVoiceSDK_ESpeechLanguage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpeekRecognizer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SpeekRecognizerFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_StartLisening()
	{
		UObject* Outer=Z_Construct_UClass_USpeekRecognizerFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StartLisening"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpeekRecognizer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SpeekRecognizerFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_StopLisening()
	{
		UObject* Outer=Z_Construct_UClass_USpeekRecognizerFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopLisening"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpeekRecognizer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SpeekRecognizerFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USpeekRecognizerFunctionLibrary_NoRegister()
	{
		return USpeekRecognizerFunctionLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_USpeekRecognizerFunctionLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_FlytekVoiceSDK();
			OuterClass = USpeekRecognizerFunctionLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_InitializeSpeechRecognizer());
				OuterClass->LinkChild(Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_StartLisening());
				OuterClass->LinkChild(Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_StopLisening());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_InitializeSpeechRecognizer(), "InitializeSpeechRecognizer"); // 1940236818
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_StartLisening(), "StartLisening"); // 4001678486
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USpeekRecognizerFunctionLibrary_StopLisening(), "StopLisening"); // 500030635
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SpeekRecognizerFunctionLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/SpeekRecognizerFunctionLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USpeekRecognizerFunctionLibrary(Z_Construct_UClass_USpeekRecognizerFunctionLibrary, &USpeekRecognizerFunctionLibrary::StaticClass, TEXT("USpeekRecognizerFunctionLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USpeekRecognizerFunctionLibrary);
	UPackage* Z_Construct_UPackage__Script_FlytekVoiceSDK()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/FlytekVoiceSDK")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x6E4FF183;
			Guid.B = 0xFF536B63;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_FlytekVoiceSDK_OnSpeechRecognizeResult__DelegateSignature();
			Z_Construct_UDelegateFunction_FlytekVoiceSDK_OnInitializeResult__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
